# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  schedule:
    - cron: '0 22 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env: 
     ze1: ${{ secrets.MARISA }}
     passwd: ${{ secrets.PASSWD }}
     upk163: ${{ secrets.UPK163 }}
     

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      

            
      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: change to guihong wang
        run: |
          export ze="$ze1"
          echo $ze1
          git config --global user.name "guihongwang"
          git config --global user.email "marisa@marisa.ml"
          git config --global user.password $passwd
          pwd
          git lfs install
          git lfs track "*.zip"

          

      - name: fake path
        run: |
          wget https://github.com/PatchyVideo/platinum/raw/main/package.json
          wget https://github.com/PatchyVideo/platinum/raw/main/pnpm-lock.yaml

      - name: clone patchyvideo
        run: |
          echo $ze
          git clone https://github.com/PatchyVideo/platinum.git
          cd platinum
          git checkout nuxt
          
          
          
      - name: build patchyvideo
        run: |
          npm i -global pnpm
          pnpm install --frozen-lockfile
          pnpm codegen
          pnpm build
          ls
          pwd
      
      - name: pack&deploy patchyvideo
        run: |
         sudo apt-get install zip unzip -y
         cd /home/runner/work/action/action/platinum
         zip -r dist.zip dist
         cd 
         mkdir gui && cd gui
         git clone https://guihongwang:"$passwd"@github.com/GDWGH/pv.git
         cd pv && cp CNAME /home/runner/CNAME
         git rm * -r
         git commit -m "patchyvideo has been endeploy Ze☆"
         cp -r /home/runner/work/action/action/platinum/dist/* /home/runner/gui/pv/
         cd /home/runner/gui/pv
         cp /home/runner/CNAME CNAME
         cp /home/runner/work/action/action/platinum/dist.zip /home/runner/gui/pv/
         git add .
         git commit -m "patchyvideo has been deploy Ze☆"
         git branch -M main
         git push -u origin main
         
      - name: set onedrive upl
        run: |
          UPK1631=$UPK163
          cd && cd gui
          wget https://github.com/MoeClub/OneList/raw/master/OneDriveUploader/amd64/linux/OneDriveUploader
          chmod 777 OneDriveUploader
          sudo cp OneDriveUploader /usr/local/bin/
          git clone https://guihongwang:"$passwd"@github.com/GDWGH/miniature-engine.git
          cp /home/runner/gui/miniature-engine/auth.json /home/runner/gui/
          pwd
          
          
      - name: archive hyplayer
        run: |
         Date=$(date "+%Y%m%d")
         cd && cd gui
         git clone https://github.com/HyPlayer/hyplayer
         cd && cd gui
         zip -r "hyplayer_$Date.zip" hyplayer
         OneDriveUploader -c /home/runner/gui/auth.json -s "hyplayer_$Date.zip" -r "statics/action/achieved"
         
      - name: 163musician1
        run: |
         cd && cd gui
         mkdir pic && cd pic
         wget https://xn--wcsr19aux9a.xn--xuw71npw9a.ml/Delopy.png
         cd && cd gui
         mkdir 163 && cd 163
         wget https://github.com/guihongwong/action/releases/download/file/Fuck163MusicTasks_linux_amd64
         chmod 777 ./Fuck163MusicTasks_linux_amd64
         pwd
         
      - name: export config
        run: |
         cd && cd gui 
         cp /home/runner/gui/miniature-engine/config.json 163/
         cd 163
          
      - name: 163musician2
        run: |
         cd  
         cd /home/runner
         cd gui/163 
          ./Fuck163MusicTasks_linux_amd64
          
          
      - name: ncm
        run: |
         cd && cd gui
         cp -r /home/runner/gui/miniature-engine/ncmt /home/runner/gui/ncmt
         cd ncmt
         pip install -r requirements.txt
         python index.py
         
