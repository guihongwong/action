# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  schedule:
    - cron: '0 22 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env: 
     ze1: ${{ secrets.MARISA }}
     passwd: ${{ secrets.PASSWD }}
     upk163: ${{ secrets.UPK163 }}
     

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      

            
      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: change to guihong wang
        run: |
          export ze="$ze1"
          echo $ze1
          git config --global user.name "guihongwang"
          git config --global user.email "marisa@marisa.ml"
          git config --global user.password $passwd
          pwd
          git lfs install
          git lfs track "*.zip"
          
      - name: Set up WARP
        uses: fscarmen/warp-on-actions@v1.2
        with:
          stack: dual   # Optional. Support [ ipv4, ipv6, dual ]. Default is dual.
          
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.2'
          
    #  - name: build patchyvideo
     #   run: |
      #    echo $ze
       #   npm install pnpm@7 -g
       #   pnpm -v
        #  git clone https://github.com/PatchyVideo/platinum.git
        #  cd platinum
        #  pnpm i
        #  pnpm codegen
        #  pnpm build
        #  ls
        #  pwd
      
      #- name: pack&deploy patchyvideo
       # run: |
        # sudo apt-get install zip unzip -y
        # cd /home/runner/work/action/action/platinum
        # zip -r dist.zip dist
        # cd 
       #  mkdir gui && cd gui
       #  git clone https://guihongwang:"$passwd"@github.com/GDWGH/pv.git
       #  cd pv && cp CNAME /home/runner/CNAME
       #  git rm * -r
       #  git commit -m "patchyvideo has been endeploy Ze☆"
       #  cp -r /home/runner/work/action/action/platinum/dist/* /home/runner/gui/pv/
       #  cd /home/runner/gui/pv
       #  cp /home/runner/CNAME CNAME
       #  cp /home/runner/work/action/action/platinum/dist.zip /home/runner/gui/pv/
       #  git add .
       #  git commit -m "patchyvideo has been deploy Ze☆"
       #  git branch -M main
       #  git pull
       #  git push -u origin main
         
      - name: sec
        run: |
          cd 
          mkdir gui
          cd && cd gui
          git clone https://guihongwang:"$passwd"@github.com/GDWGH/miniature-engine.git
          pwd
         
      - name: 163musician1
        run: |
         cd && cd gui
         mkdir pic && cd pic
         wget https://raw.githubusercontent.com/GDWGH/rdthimg-front/cf0a0c8f3fd58cfe602805793d3d824048a95b7f/20230618.png
         cd && cd gui
         mkdir 163 && cd 163
         wget https://github.com/guihongwong/action/releases/download/file/Fuck163MusicTasks_linux_amd64
         chmod 777 ./Fuck163MusicTasks_linux_amd64
         pwd
         
      - name: export config
        run: |
         cd && cd gui 
         cp /home/runner/gui/miniature-engine/config.json 163/
         cd 163
          
      - name: 163musician2
        run: |
         cd  
         cd /home/runner
         cd gui/163 
         ./Fuck163MusicTasks_linux_amd64
          
          
      - name: ncm
        run: |
         cd && cd gui
         cp -r /home/runner/gui/miniature-engine/ncmt /home/runner/gui/ncmt
         cd ncmt
         pip install -r requirements.txt
         python index.py


      - name: b
        run:   |
         cd
         wget https://github.com/guihongwong/action/releases/download/file/b.zip
         unzip b.zip
         cd b
         pwd
         cp /home/runner/gui/miniature-engine/cookies.json /home/runner/b
         chmod 777 Ray.BiliBiliTool.Console
         ./Ray.BiliBiliTool.Console --runTasks=Daily

      - name: mfuns
        run: |
         cd && cd gui 
         git clone https://guihongwang:"$passwd"@github.com/GDWGH/CheckInForMfuns.git
         cd CheckInForMfuns
         pip install -r requirements.txt
         cp /home/runner/gui/miniature-engine/token /home/runner/gui/CheckInForMfuns
         python3 main.py
